within ;
package TwoZoneApartmentHydronic "TwoZoneApartmentHydronic"
annotation (uses(                            Modelica(version="3.2.3"),
    ModelicaServices(version="3.2.3"),
    IBPSA(version="3.0.0"),
    Buildings(version="8.0.1"),
    MultiZoneResidentialHydronic(version="2"),
    IDEAS(version="2.1.0")),
  version="1.0.0",
  conversion(from(
      version="1.0.0",
      to="Intermediate",
      change(item=convertClass(
            "MerezzateCaseStudy.Components.HydronicSystemNoThreeWay",
            "MerezzateCaseStudy.Components.HydronicSystem"),
        item=convertElement(
            "MerezzateCaseStudy.TestCases.ApartmentModelQHTyp",
            "thermostatDayZ.TSup",
            "thermostatDayZ.ValCon"),
        item=convertElement(
            "MerezzateCaseStudy.TestCases.ApartmentModelQHTyp",
            "thermostatNigZ.TSup",
            "thermostatNigZ.ValCon"),
        item=convertElement(
            "MerezzateCaseStudy.Components.Thermostat_T",
            "TSup",
            "ValCon"),
        item=convertElement(
            "MerezzateCaseStudy.TestCases.ApartmentModelQHTyp",
            "hydronicSystem.TRooDayZ",
            "hydronicSystem.ValConDayZon"),
        item=convertElement(
            "MerezzateCaseStudy.Components.HydronicSystem",
            "TRooDayZ",
            "ValConDayZon"),
        item=convertElement(
            "MerezzateCaseStudy.TestCases.ApartmentModelQHTyp",
            "hydronicSystem.ValConDayZon1",
            "hydronicSystem.ValConNigZon"),
        item=convertElement(
            "MerezzateCaseStudy.Components.HydronicSystem",
            "ValConDayZon1",
            "ValConNigZon"),
        item=convertElement(
            "MerezzateCaseStudy.TestCases.ApartmentModelQHTyp",
            "thermostatDayZ.TSetZ1",
            "thermostatDayZ.Occ"),
        item=convertElement(
            "MerezzateCaseStudy.TestCases.ApartmentModelQHTyp",
            "thermostatNigZ.TSetZ1",
            "thermostatNigZ.Occ"),
        item=convertElement(
            "MerezzateCaseStudy.Components.Thermostat_T",
            "TSetZ1",
            "Occ"),
        item=convertElement(
            "MerezzateCaseStudy.TestCases.ApartmentModelQHTyp",
            "hydronicSystem.gain1",
            "hydronicSystem.gainValNigZon"),
        item=convertElement(
            "MerezzateCaseStudy.Components.HydronicSystem",
            "gain1",
            "gainValNigZon"),
        item=convertElement(
            "MerezzateCaseStudy.TestCases.ApartmentModelQHTyp",
            "hydronicSystem.gainValNigZon1",
            "hydronicSystem.gainValDayZon"),
        item=convertElement(
            "MerezzateCaseStudy.Components.HydronicSystem",
            "gainValNigZon1",
            "gainValDayZon"),
        item=convertElement(
            "MerezzateCaseStudy.TestCases.ApartmentModelQHTyp",
            "hydronicSystem.DistrictHeating",
            "hydronicSystem.BoundaryConditions"),
        item=convertElement(
            "MerezzateCaseStudy.Components.HydronicSystem",
            "DistrictHeating",
            "BoundaryConditions"),
        item=convertElement(
            "MerezzateCaseStudy.TestCases.BoundaryConditions",
            "const",
            "DumTem"),
        item=convertElement(
            "MerezzateCaseStudy.TestCases.BoundaryConditions",
            "equ",
            "equDay"),
        item=convertElement(
            "MerezzateCaseStudy.TestCases.BoundaryConditions",
            "occ",
            "occDay"),
        item=convertElement(
            "MerezzateCaseStudy.TestCases.BoundaryConditions",
            "lig",
            "ligDay"),
        item=convertElement(
            "MerezzateCaseStudy.TestCases.BoundaryConditions",
            "equDay1",
            "equNig"),
        item=convertElement(
            "MerezzateCaseStudy.TestCases.BoundaryConditions",
            "occDay1",
            "occNig"),
        item=convertElement(
            "MerezzateCaseStudy.TestCases.BoundaryConditions",
            "ligDay1",
            "ligNig"),
        item=convertElement(
            "TwoZoneApartmentHydronic.TestCases.ApartmentModelQHTyp",
            "dooLiv",
            "doo"),
        item=convertElement(
            "TwoZoneApartmentHydronic.TestCases.BoundaryConditions",
            "thermostatNigZ",
            "thermostatNigZon"),
        item=convertElement(
            "TwoZoneApartmentHydronic.TestCases.BoundaryConditions",
            "thermostatDayZ",
            "thermostatDayZon"),
        item=convertElement(
            "TwoZoneApartmentHydronic.TestCases.BoundaryConditions",
            "sumRad",
            "sumRadDayZon"),
        item=convertElement(
            "TwoZoneApartmentHydronic.TestCases.BoundaryConditions",
            "sumCon",
            "sumConDayZon"),
        item=convertElement(
            "TwoZoneApartmentHydronic.TestCases.BoundaryConditions",
            "sumLat",
            "sumLatDayZon"),
        item=convertElement(
            "TwoZoneApartmentHydronic.TestCases.BoundaryConditions",
            "sumRad1",
            "sumRadNigZone"),
        item=convertElement(
            "TwoZoneApartmentHydronic.TestCases.BoundaryConditions",
            "sumCon1",
            "sumConNigZone"),
        item=convertElement(
            "TwoZoneApartmentHydronic.TestCases.BoundaryConditions",
            "sumLat1",
            "sumLatNigZone"),
        item=convertElement(
            "TwoZoneApartmentHydronic.TestCases.BoundaryConditions",
            "sumRadNigZone",
            "sumRadNigZon"),
        item=convertElement(
            "TwoZoneApartmentHydronic.TestCases.BoundaryConditions",
            "sumConNigZone",
            "sumConNigZon"),
        item=convertElement(
            "TwoZoneApartmentHydronic.TestCases.BoundaryConditions",
            "sumLatNigZone",
            "sumLatNigZon")))));
end TwoZoneApartmentHydronic;
